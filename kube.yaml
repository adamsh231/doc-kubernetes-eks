---

apiVersion: v1
kind: Namespace
metadata:
  name: ns-2048

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns-2048
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: 2048-pod
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 2048-pod
    spec:
      containers:
      - image: alexwhen/docker-2048
        imagePullPolicy: Always
        name: 2048-pod
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  namespace: ns-2048
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
  type: NodePort
  selector:
    app.kubernetes.io/name: 2048-pod

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns-2048
  name: deployment-php
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: php-pod
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: php-pod
    spec:
      containers:
      - image: bbenns/php-hello-world
        imagePullPolicy: Always
        name: php-pod
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  namespace: ns-2048
  name: service-php
spec:
  ports:
    - port: 80
      targetPort: 80
  type: NodePort
  selector:
    app.kubernetes.io/name: php-pod

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns-2048
  name: deployment-graphql
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: graphql-pod
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: graphql-pod
    spec:
      containers:
      - image: adamsh231/graphql
        imagePullPolicy: Always
        name: graphql-pod
        ports:
        - containerPort: 9000

---

apiVersion: v1
kind: Service
metadata:
  namespace: ns-2048
  name: service-graphql
spec:
  ports:
    - port: 80
      targetPort: 9000
  type: NodePort
  selector:
    app.kubernetes.io/name: graphql-pod

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: ns-2048
  name: ingress-testing
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:770964819483:certificate/fc68fd0f-0544-4d50-93b2-9d9d55984f08
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    # external-dns.alpha.kubernetes.io/hostname: >
    #   game.shoesmart-research.com,
    #   products.shoesmart-research.com
spec:
  rules:
  - host: game.shoesmart-research.com
    http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: service-2048
            port:
              number: 80
  - host: products.shoesmart-research.com
    http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: service-php
            port:
              number: 80
  - host: graphql.shoesmart-research.com
    http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: service-graphql
            port:
              number: 80